import discord
from discord.ext import commands
import os


class Moderation(commands.Cog):
    
    def __init__(self, bot):
        self.bot = bot
    
    @commands.Cog.listener()
    async def on_member_join(self, member):
        '''detects if a member is joining'''
        print(f'{member} has joined a server')
    
    @commands.Cog.listener()
    async def on_member_remove(self, member):
        '''detects if someone leaves a server'''
        print(f'{member} has left a server')

    @commands.command()
    @commands.has_role("Vice President")
    async def clear(self, ctx, amount=5):
        if amount > 100 :
            amount = 100
        await ctx.channel.purge(limit=amount)

    @commands.command()
    @commands.has_role("Moderator")
    async def kick(self, ctx, member : discord.Member, *, reason=None):
        '''kicks member -> command use : kick <member>'''
        await member.kick(reason=reason)

    @commands.command()
    @commands.has_role("Moderator") 
    async def ban(self, ctx, member : discord.Member, *, reason=None):
        '''bans member -> command use : ban <member>'''
        await member.ban(reason=reason)

    @commands.command()
    @commands.has_role("Moderator")
    async def unban(self, ctx, *, member):
        '''Unbans selected user: syntax ->
        unban <user#tag>'''
        banned_users = await ctx.guild.bans()
        member_name, member_discriminator = member.split()

        for ban_entry in banned_users:
            user = ban_entry.user

            if(user.name, user.discriminator) == (member_name, member_discriminator):
                await ctx.guild.unban(user)
                await ctx.send(f'Unbanned {user.mention}')
                return         

def setup(bot):
    bot.add_cog(Moderation(bot))   
    print('Moderation is loaded')                          
